name: Auto Release 

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, bcmath, intl

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Clean node_modules and package-lock.json
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install NPM Dependencies
        run: npm install

      - name: Set up Git identity
        run: |
          git config --global user.email "your-email@example.com"
          git config --global user.name "GitHub Actions"

      - name: Build assets
        run: npm run build

      - name: List built files
        run: ls -R public/build

      - name: Zip build files
        run: zip -r build.zip public/build

      - name: Bump version with standard-version
        run: npx standard-version --tag-release

      - name: Push changes to repository
        run: |
          git push origin main --follow-tags

      - name: Generate tag name from package.json
        id: generate_tag
        run: |
          VERSION=$(jq -r ".version" package.json)
          echo "TAG_NAME=v$VERSION" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Release ${{ env.TAG_NAME }}"
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Upload Build Zip to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build.zip
          asset_name: build.zip
          asset_content_type: application/zip
